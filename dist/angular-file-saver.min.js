!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.angularFileSaver=e()}}(function(){return function e(n,r,t){function o(i,f){if(!r[i]){if(!n[i]){var a="function"==typeof require&&require;if(!f&&a)return a(i,!0);if(u)return u(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=r[i]={exports:{}};n[i][0].call(l.exports,function(e){var r=n[i][1][e];return o(r?r:e)},l,l.exports,e,n,r,t)}return r[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(e,n,r){"use strict";function t(e){throw new Error(e)}function o(e){return"[object Array]"===Object.prototype.toString.call(e)}function u(e){return null!==e&&"object"==typeof e}function i(e){return"string"==typeof e||e instanceof String}function f(e){return e instanceof Blob}function a(){function e(e,n){try{saveAs(e,n)}catch(r){t(r.message)}}return{download:function(n,r,a){if(o(n)&&f(n)||t("Data argument should be represented as an array or Blob instance"),i(r)||t("Filename argument should be a string"),u(a)||t("Options argument should be an object"),f(n))return e(n,r);var c=new Blob(n,a);return e(c,r)}}}angular.module("fileSaver",[]).factory("SaveAs",a)},{}]},{},[1])(1)});