!function(n){function e(t){if(r[t])return r[t].exports;var o=r[t]={exports:{},id:t,loaded:!1};return n[t].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var r={};return e.m=n,e.c=r,e.p="",e(0)}([function(n,e,r){"use strict";angular.module("ngFileSaver",[]).factory("FileSaver",["Blob","SaveAs","FileSaverUtils",r(1)]).factory("FileSaverUtils",[r(2)]).factory("Blob",["$window","FileSaverUtils",r(3)]).factory("SaveAs",["$window","FileSaverUtils",r(4)])},function(n,e){"use strict";n.exports=function(n,e,r){function t(n,t,o){try{e(n,t,o)}catch(s){r.handleErrors(s.message)}}return{saveAs:function(n,e,o){return r.isBlobInstance(n)||r.handleErrors("Data argument should be a blob instance"),r.isString(e)||r.handleErrors("Filename argument should be a string"),t(n,e,o)}}}},function(n,e){"use strict";n.exports=function(){return{handleErrors:function(n){throw new Error(n)},isString:function(n){return"string"==typeof n||n instanceof String},isUndefined:function(n){return"undefined"==typeof n},isBlobInstance:function(n){return n instanceof Blob}}}},function(n,e){"use strict";n.exports=function(n,e){var r=n.Blob;return e.isUndefined(r)&&e.handleErrors("Blob is not supported. Please include blob polyfilll"),r}},function(n,e){"use strict";n.exports=function(n,e){var r=n.saveAs;return e.isUndefined(r)&&e.handleErrors("saveAs is not supported. Please include saveAs polyfill"),r}}]);