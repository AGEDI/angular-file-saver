!function n(e,r,t){function o(i,a){if(!r[i]){if(!e[i]){var f="function"==typeof require&&require;if(!a&&f)return f(i,!0);if(u)return u(i,!0);var s=new Error("Cannot find module '"+i+"'");throw s.code="MODULE_NOT_FOUND",s}var c=r[i]={exports:{}};e[i][0].call(c.exports,function(n){var r=e[i][1][n];return o(r?r:n)},c,c.exports,n,e,r,t)}return r[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(n,e,r){"use strict";function t(n){throw new Error(n)}function o(n){return"[object Array]"===Object.prototype.toString.call(n)}function u(n){return null!==n&&"object"==typeof n}function i(n){return"string"==typeof n||n instanceof String}function a(n){return"undefined"==typeof n}function f(n){function e(n){return n instanceof s}function r(n,e){try{f(n,e)}catch(r){t(r.message)}}var f=n.saveAs,s=n.Blob;return a(f)&&t("saveAs is not supported. Please include saveAs polyfill"),a(s)&&t("Blob is not supported. Please include blob polyfill"),{download:function(n,a,f){if(o(n)&&e(n)||t("Data argument should be represented as an array or Blob instance"),i(a)||t("Filename argument should be a string"),u(f)||t("Options argument should be an object"),e(n))return r(n,a);var c=new s(n,f);return r(c,a)}}}angular.module("fileSaver",[]).factory("SaveAs",["$window",f])},{}]},{},[1]);