!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.angularFileSaver=e()}}(function(){return function e(n,r,t){function o(i,f){if(!r[i]){if(!n[i]){var a="function"==typeof require&&require;if(!f&&a)return a(i,!0);if(u)return u(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=r[i]={exports:{}};n[i][0].call(l.exports,function(e){var r=n[i][1][e];return o(r?r:e)},l,l.exports,e,n,r,t)}return r[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(e,n,r){"use strict";function t(){function e(e){throw new Error(e)}function n(e){return"[object Array]"===Object.prototype.toString.call(e)}function r(e){return null!==e&&"object"==typeof e}function t(e){return"string"==typeof e||e instanceof String}function o(e){return e instanceof Blob}function u(n,r){try{saveAs(n,r)}catch(t){e(t.message)}}return{download:function(i,f,a){if(n(i)&&o(i)||e("Data argument should be represented as an array or Blob instance"),t(f)||e("Filename argument should be a string"),r(a)||e("Options argument should be an object"),o(i))return u(i,f);var c=new Blob(i,a);return u(c,f)}}}angular.module("fileSaver",[]).factory("SaveAs",t)},{}]},{},[1])(1)});